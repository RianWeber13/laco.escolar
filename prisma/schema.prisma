// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  // Aponte a saída para dentro de node_modules
  output        = "../node_modules/.prisma/client"
  // Adicione os alvos de binário
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  DIRETOR
  COORDENADOR
  PROFESSOR
  RESPONSAVEL
}

model RandomId {
  id        String @id @default(uuid())
  createdAt DateTime @default(now())
}

model User {
  id           String   @id @default(uuid())
  nome         String
  email        String   @unique
  senha        String
  cpf          String   @unique
  telefone     String
  role         Role
  createdById  String?  // Quem cadastrou esse usuário
  createdBy    User?    @relation("UserCreatedBy", fields: [createdById], references: [id])
  createdUsers User[]   @relation("UserCreatedBy")
  turmas       Turma[]  @relation("ProfessoresTurma")
  alunos       Aluno[]  @relation("ResponsavelAluno")
  mensagens    Mensagem[] @relation("AutorMensagem")
}

model Turma {
  id          String   @id @default(uuid())
  nome        String
  professores User[]   @relation("ProfessoresTurma")
  alunos      Aluno[]
  mensagens   Mensagem[]
}

model Aluno {
  id            String   @id @default(uuid())
  nome          String
  turmaId       String
  turma         Turma    @relation(fields: [turmaId], references: [id])
  responsavelId String
  responsavel   User     @relation("ResponsavelAluno", fields: [responsavelId], references: [id])
}

model Mensagem {
  id        String   @id @default(uuid())
  texto     String
  turmaId   String
  turma     Turma    @relation(fields: [turmaId], references: [id])
  autorId   String
  autor     User     @relation("AutorMensagem", fields: [autorId], references: [id])
  data      DateTime @default(now())
}
